version: '3.4'

services:

  eventstore:
    image: eventstore
    build:
      context: .
      dockerfile: EventStore.Middleware/Dockerfile
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - ES_CONNECTION=Server=database_sql;Database=event_sourcing;User Id=sa;Password=Pass@word
    depends_on:
    - database_sql

  tracking:
    image: tracking
    build:
      context: .
      dockerfile: Tracking.Service/Dockerfile
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - ES_CONNECTION=Server=database_sql;Database=event_sourcing;User Id=sa;Password=Pass@word
    - DB_CONNECTION=Server=database_sql;Database=tracking;User Id=sa;Password=Pass@word
    - DISTRIBUTED_CACHE=distributed_cache
    - RABBIT_CONNECTION=amqp://test:test@rabbitmq:5672
    depends_on:
    - database_sql  
    - eventstore
    - distributed_cache
    - rabbitmq

    
  vehicle:
    image: vehicle
    build:
      context: .
      dockerfile: Vehicle.Service/Dockerfile
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - ES_CONNECTION=Server=database_sql;Database=event_sourcing;User Id=sa;Password=Pass@word
    - DB_CONNECTION=Server=database_sql;Database=vehicle;User Id=sa;Password=Pass@word
    - DISTRIBUTED_CACHE=distributed_cache
    - RABBIT_CONNECTION=amqp://test:test@rabbitmq:5672
    depends_on:
    - database_sql  
    - eventstore
    - distributed_cache
    - rabbitmq

  customer:
    image: customer
    build:
      context: .
      dockerfile: Customer.Service/Dockerfile
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - ES_CONNECTION=Server=database_sql;Database=event_sourcing;User Id=sa;Password=Pass@word
    - DB_CONNECTION=Server=database_sql;Database=customer;User Id=sa;Password=Pass@word
    - DISTRIBUTED_CACHE=distributed_cache
    - RABBIT_CONNECTION=amqp://test:test@rabbitmq:5672
    depends_on:
    - database_sql  
    - eventstore
    - distributed_cache
    - rabbitmq

  authorize:
    image: authorize
    build:
      context: .
      dockerfile: Authorize.Service/Dockerfile
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - ES_CONNECTION=Server=database_sql;Database=event_sourcing;User Id=sa;Password=Pass@word
    - IDENTITY_CONNECTION=Server=database_sql;Database=authorize;User Id=sa;Password=Pass@word
    - DISTRIBUTED_CACHE=distributed_cache
    depends_on:
    - database_sql  
    - eventstore
    - distributed_cache
    - rabbitmq
    ports:
    - 32774:80

  ocelotgateway:
    image: ocelotgateway
    build:
      context: .
      dockerfile: VehicleTracker.Gateway/Dockerfile
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
    - tracking
    - vehicle
    - customer
    - authorize
    - rabbitmq
    ports:
    - 6543:80

  distributed_cache:
    image: redis
    ports:
    - 5551:6739

  #### RabbitMQ Container ####
  rabbitmq:
    image: "rabbitmq:3-management"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "test"
      RABBITMQ_DEFAULT_PASS: "test"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
    - 15672:15672
    - 5672:5672

  database_sql:
    image: microsoft/mssql-server-linux:latest
    environment:
    - MSSQL_SA_PASSWORD=Pass@word
    - ACCEPT_EULA=Y
    - MSSQL_PID=Express
    ports:
    - 5553:1433
